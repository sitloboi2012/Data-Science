source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Titanic/titanic.r')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
#checking the COUNT(value) in each of the type
hist(data$type,main="Type Value Count",xlab="Type of Wine",freq = FALSE) #=> type 2 has the most value
#Split out the data (80%/20%)
sample  <- createDataPartition(data$type,p=0.80,list=FALSE)
train <- data[sample,]
test <- data[-sample]
#Create X and Y for prediction
x <- data[,2:13]
y <- data[,1]
control <- trainControl(method="cv",number=10)
metric <- "Accuracy"
cbind(Freq = table(train$type), Percentage = percentage)
x <- data[,2:13]
y <- data[,1]
control <- trainControl(method="cv",number=10)
metric <- "Accuracy"
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
control <- trainControl(method="cv",number=10)
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
set.seed(101)
fit.cart <- train(type~., data=train, method="rpart", trControl = control, metric = metric)
fit.knn <- train(Class~., data=iris_train, method="knn", trControl= control, metric=metric)
fit.knn <- train(type~., data=train, method="knn", trControl= control, metric=metric)
fit.knn <- train(type~., data=train, method="knn", trControl= control, metric=metric)
fit.knn <- train(type~., data=train, method="knn", trControl= control)
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
source('C:/Users/huyvo/OneDrive/Máy tính/HackerRank/Portfolio/Wine/Wines.R')
test$type <- out.rf
mean(out.rf == test$type)
test$type <- out.rf
out.rf <- predict(rf, newdata=test)
library(randomForest)
set.seed(0)
rf <- randomForest(factor(type)~ alcohol+malic.acid+ash+alcalinity.of.ash+magnesium+total.phenols+flavanoids+nonflavanoid.phenols+proanthocyanins+color.intensity+hue+dilute.wines+proline, data=train, ntree=401)
importance(rf)
out.rf <- predict(rf, newdata=test)
mean(out.rf == test$type)
out.rf <- predict(rf, newdata=test)
rf <- randomForest(factor(type)~., data=train, ntree=401)
importance(rf)
out.rf <- predict(rf, newdata=test)
set.seed(0)
rf <- randomForest(type~., data=train, ntree=401)
importance(rf)
out.rf <- predict(rf, newdata=test)
mean(out.rf == test$type)
test$type <- out.rf
